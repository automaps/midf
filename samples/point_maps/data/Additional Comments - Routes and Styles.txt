Comments regarding Routes.json and Styles.json:

The Routes file format:
    "coordinates" - the list of the indexed route point coordinates

    "links" - the final graph of the route points connections ("i" - destination route point, "d" - distance (when number) or stairs + distance (when array))

    "level_coords" - the dictionary of the ordinals and the corresponding route points ("ordinal number": [startRoutePointIndex, numberOfPoints])

Styles.json:

    In the styles file you will see the category names of the features as well as category IDs of the occupants and below we provide the algorithm of getting the final Styles which will be applied for the particualr feature

    const DEFAULT_STYLES = {
        floor: false,
        floorColor: '#606060',
        floorMinZoom: 0,
        floorMaxZoom: 1000,
        roof: false,
        roofColor: '#202020',
        roofHeight: 2.5,
        roofMinZoom: 0,
        roofMaxZoom: 1000,
        walls: false,
        wallsColor: '#a0a0a0',
        wallsTopColor: null,
        wallsInsideColor: null,
        wallsHeight: 2.5,
        wallsWidth: 0.1,
        wallsMinZoom: 0,
        wallsMaxZoom: 1000,
        solid: false,
        priority: 0,
      }

    // take style for the feature's property "CATEGORY" ("room" for example)
    const featureStyle = stylesFile[feature.properties["CATEGORY"]]

    // only for unit features (from the units file) we look for the occupant's category styles
    const occupantStyle = feature.type === 'unit' ? stylesFile[feature.occupant.categoryId] ?? {} : {}

    // the end style is combination of all the styles
    const style = {...DEFAULT_STYLES, ...featureStyle, ...categoryStyle}
